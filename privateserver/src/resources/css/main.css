:root {
  --main-bg-color: unset;
  --text-color-lighter: var(--color-dark);
  --text-color-light: var(--color-dark);
  --text-color-dark: var(--color-light);
  --text-color-hover: initial;
  --text-color-active: initial;
  --text-color-disabled: #888;
  --text-color-bg: unset;
  --text-color-bg-highlight: unset;

  --color-disabled: #ddd;
  --color-border: #ccc;
  --input-color: unset;
}

body {
  font-family: Calibri, 'Trebuchet MS', sans-serif;
  background-color: var(--main-bg-color);
}

h1 {
  margin: 0 0 0 2rem;
  line-height: 5.5rem;
  color: var(--text-color-bg);
  font-size: 7rem;
}

.highlight {
  color: var(--text-color-bg-highlight);
}

.bloc {
  border: 1px solid var(--color-border);
  background-color: var(--color-lighter);
  color: var(--text-color-lighter);
}

/* Style the tab */
.tab {
  overflow: hidden;
  border: 1px solid var(--color-border);
  background-color: var(--color-light);
  color: var(--text-color-light);
  padding: .5rem;
}

/* Style the tab content */
.tab-content {
  display: none;
  padding: 1rem 0.75rem;
  border-top: none;
}

.tab button {
  border: none;
  background-color: inherit;
}

/* Change active tab button background color */
.tab button.active {
  background-color: var(--color-active);
  color: var(--text-color-active);
}

.tab-content {
  font-size: x-large;
}

.tab-content > button {
  width: fit-content;
  margin: auto;
  padding: 0.5rem 1.5rem;
  background-color: var(--color-light);
  color: var(--text-color-light);
}

label[for] {
  font-variant: small-caps;
  color: var(--text-color-light);
}

label[for].disabled {
  background-color: var(--color-disabled);
  color: var(--text-color-disabled);
  opacity: 0.7;
}

label[for] > input[type="file"] {
  display: none;
}

button {
  border-radius: .2rem;
  border: 1px solid var(--color-border);
  padding: 1rem;
  cursor: pointer;
  transition: 0.3s;
  font-size: x-large;
}

label[for], a, div[onclick] {
  border: 1px solid var(--color-border);
  border-radius: .2rem;
  padding-left: 1rem;
  padding-right: 1rem;
  height: inherit;
  text-align: center;
}

a, div[onclick] {
  padding: 1rem;
}

button, a {
  background-color: var(--color-light);
  color: var(--text-color-light);
}

button.color-inverse, a.color-inverse, div[onclick] {
  background-color: var(--color-dark);
  color: var(--text-color-dark);
}

a:hover, button:hover, div[onclick]:hover {
  transform: scale(1.05);
}

button:hover {
  background-color: var(--color-hover);
  color: var(--text-color-hover);
}

label[for]:not(.disabled):hover {
  background-color: var(--color-light);
}

a:hover, div[onclick]:hover {
  background-color: var(--color-hover);
  color: var(--text-color-hover);;
}

a {
  text-decoration: none;
  color: var(--text-color-light);
}

input, select {
  background-color: var(--input-color);
  border: 1px solid var(--color-border);
  font-size: x-large;
}

/* hide */
.d-none {
  display: none!important;
}

.flex-column {
  display: flex;
  flex-direction: column;
  gap: .75rem;
}

/* displays content on a line, with equal, small spacing */
.flex-line {
  display: flex;
  align-items: center;
  gap: .5rem;
}

.flex-line.flex-max {
  width: 100%;
}

.flex-max > * {
  flex-grow: 1;
}

/* Content fill two columns of same width */
.grid-2-col-same {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  align-items: center;
  gap: .5rem;
}

.grid-3-col-same {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  align-items: center;
  gap: .5rem;
}

/* Content fill two columns, width depends on content */
.grid-2-col-auto {
  display: grid;
  grid-template-columns: repeat(2, auto);
  align-items: center;
  gap: .5rem;
}

.grid-3-col-auto {
  display: grid;
  grid-template-columns: repeat(3, auto);
  align-items: center;
  gap: .5rem;
}

[class*="grid-"][class*="col-"] > * {
  width: auto;
}

/* width depends on content */
.fit-content {
  width: fit-content;
}

.w-100 {
  width: 100%;
}

/* centers by applying margins */
.m-auto {
  margin: auto;
}

/* centers the text */
.center {
  text-align: center;
}